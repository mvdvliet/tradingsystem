services:
  webapp:
    build: .
    image: webapp
    container_name: webapp
    network_mode: "host"
    ports:
      - 5056:5056
    env_file:
      - ./.env
    volumes:
      - ./webapp:/app/webapp
      - logs:/var/log/ibgwweb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5056/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  postgres:
      image: postgres:16-alpine
      container_name: postgres
      restart: unless-stopped
      network_mode: "host"
      environment:
        - POSTGRES_USER=
        - POSTGRES_PASSWORD=
        - POSTGRES_DB=
        - PGUSER=
      ports:
        - 5432:5432
      volumes:
        - postgres_storage:/var/lib/postgresql/data
      healthcheck:
        test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
        interval: 5s
        timeout: 5s
        retries: 10

    pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin
      restart: unless-stopped
      network_mode: "host"
      environment:
        - PGADMIN_DEFAULT_EMAIL=
        - PGADMIN_DEFAULT_PASSWORD=
      ports:
        - 5433:5433
      volumes:
        - pgadmin_storage:/var/lib/pgadmin
      depends_on:
        - postgres

volumes:
  logs:
  postgres_storage:
  pgadmin_storage:
